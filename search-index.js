var searchIndex = {};
searchIndex["cbuf"] = {"doc":"Non-thread-shareable, simple and efficient Circular Buffer\nimplementation that can store N elements when full (typical circular\nbuffer implementations store N-1) without using separate flags.","items":[[3,"CBuf","cbuf","Circular Buffer",null,null],[3,"CBufControl","","Circular Buffer Control",null,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"new","","Create new CBuf",0,null],[11,"is_full","","Is buffer full?",0,null],[11,"is_empty","","Is buffer empty?",0,null],[11,"peek","","Peek next element from the CBuf without removing it",0,null],[11,"peek_unchecked","","Peek next element from the CBuf without removing it",0,null],[11,"get","","Remove one element from the CBuf",0,null],[11,"get_unchecked","","Remove one element from the CBuf",0,null],[11,"put","","Add element the buffer",0,null],[11,"put_unchecked","","Add element the buffer",0,null],[11,"new","","",1,{"inputs":[],"output":{"name":"cbufcontrol"}}],[11,"is_empty","","See corresponding method of CBuf",1,null],[11,"is_full","","See corresponding method of CBuf",1,null],[11,"get","","See corresponding method of CBuf",1,null],[11,"get_unchecked","","See corresponding method of CBuf",1,null],[11,"peek","","See corresponding method of CBuf",1,null],[11,"peek_unchecked","","See corresponding method of CBuf",1,null],[11,"put","","See corresponding method of CBuf",1,null],[11,"put_unchecked","","See corresponding method of CBuf",1,null]],"paths":[[3,"CBuf"],[3,"CBufControl"]]};
initSearch(searchIndex);
